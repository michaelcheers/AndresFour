Bridge.assembly("JoelFive",function($asm){"use strict";Bridge.define("JoelFive.App",{main:function(){var $step=0,$task1,$taskResult1,$task2,$taskResult2,input,task,parseString,game,$asyncBody=Bridge.fn.bind(this,function(){for(;;){$step=System.Array.min([0,1,2],$step);switch($step){case 0:input=document.createElement("input");document.body.appendChild(input);task=new System.Threading.Tasks.TaskCompletionSource;input.oninput=function(){task.setResult(input.value)};$task1=task.task;$step=1;$task1.continueWith($asyncBody,!0);return;case 1:$taskResult1=$task1.getAwaitedResult();parseString=Bridge.global.atob($taskResult1);input.style.display="none";$task2=JoelFive.Game.Create(JSON.parse(parseString));$step=2;$task2.continueWith($asyncBody,!0);return;case 2:$taskResult2=$task2.getAwaitedResult();game=$taskResult2;document.body.appendChild(game.Canvas);game.Start();return;default:return}}},arguments);$asyncBody()},statics:{fields:{smallNumber:0},ctors:{init:function(){this.smallNumber=.0001}},methods:{LoadImage:function(value){var $t,image=($t=new Image,$t.src=value,$t),task=new System.Threading.Tasks.TaskCompletionSource;return image.onload=function(){task.setResult(image)},task.task}}}});Bridge.define("JoelFive.GameObject",{statics:{methods:{Create:function(dynamic){var $step=0,$task1,$task2,$task3,$tcs=new System.Threading.Tasks.TaskCompletionSource,result,type,character,realGameObject,drawnGameObject,$async_e,$asyncBody=Bridge.fn.bind(this,function(){try{for(;;){$step=System.Array.min([0,1,2,3,4,5,6,7],$step);switch($step){case 0:if(result=null,type=dynamic.type,type==="character"){$step=1;continue}else if(type==="real game object"){$step=3;continue}else if(type==="drawn game object"){$step=5;continue}$step=7;continue;case 1:character=new JoelFive.Character;$task1=character.Parse(dynamic);$step=2;$task1.continueWith($asyncBody);return;case 2:$task1.getAwaitedResult();result=character;$step=7;continue;case 3:realGameObject=new JoelFive.RealGameObject;$task2=realGameObject.Parse(dynamic);$step=4;$task2.continueWith($asyncBody);return;case 4:$task2.getAwaitedResult();result=realGameObject;$step=7;continue;case 5:drawnGameObject=new JoelFive.DrawnGameObject;$task3=drawnGameObject.Parse(dynamic);$step=6;$task3.continueWith($asyncBody);return;case 6:$task3.getAwaitedResult();result=drawnGameObject;$step=7;continue;case 7:$tcs.setResult(result);return;default:$tcs.setResult(null);return}}}catch($async_e1){$async_e=System.Exception.create($async_e1);$tcs.setException($async_e)}},arguments);return $asyncBody(),$tcs.task}}}});Bridge.define("JoelFive.Movement",{fields:{Velocity:null,Keys:null},ctors:{init:function(){this.Velocity=new JoelFive.Vector2}}});Bridge.define("JoelFive.Rectangle",{$kind:"struct",statics:{methods:{getDefaultValue:function(){return new JoelFive.Rectangle}}},fields:{X:0,Y:0,_width:0,_height:0},props:{Width:{get:function(){return this._width},set:function(value){value<0&&(this.X-=value,value=-value);this._width=value}},Height:{get:function(){return this._height},set:function(value){value<0&&(this.Y-=value,value=-value);this._height=value}}},ctors:{ctor:function(){this.$initialize()}},methods:{Intersects:function(value){return value.X<this.X+this.Width&&this.X<value.X+value.Width&&value.Y<this.Y+this.Height&&this.Y<value.Y+value.Height},getHashCode:function(){return Bridge.addHash([3771388952,this.X,this.Y,this._width,this._height])},equals:function(o){return Bridge.is(o,JoelFive.Rectangle)?Bridge.equals(this.X,o.X)&&Bridge.equals(this.Y,o.Y)&&Bridge.equals(this._width,o._width)&&Bridge.equals(this._height,o._height):!1},$clone:function(to){var s=to||new JoelFive.Rectangle;return s.X=this.X,s.Y=this.Y,s._width=this._width,s._height=this._height,s}}});Bridge.define("JoelFive.Vector2",{$kind:"struct",statics:{methods:{getDefaultValue:function(){return new JoelFive.Vector2}}},fields:{X:0,Y:0},ctors:{ctor:function(){this.$initialize()}},methods:{getHashCode:function(){return Bridge.addHash([1955977157,this.X,this.Y])},equals:function(o){return Bridge.is(o,JoelFive.Vector2)?Bridge.equals(this.X,o.X)&&Bridge.equals(this.Y,o.Y):!1},$clone:function(to){var s=to||new JoelFive.Vector2;return s.X=this.X,s.Y=this.Y,s}}});Bridge.define("JoelFive.DrawnGameObject",{inherits:[JoelFive.GameObject],fields:{Position:null,Image:null},props:{X:{get:function(){return this.Position.X},set:function(value){this.Position.X=value}},Y:{get:function(){return this.Position.Y},set:function(value){this.Position.Y=value}},Width:{get:function(){return this.Position.Width},set:function(value){this.Position.Width=value}},Height:{get:function(){return this.Position.Height},set:function(value){this.Position.Height=value}}},ctors:{init:function(){this.Position=new JoelFive.Rectangle}},methods:{Parse:function(dynamic){var $step=0,$task1,$taskResult1,$tcs=new System.Threading.Tasks.TaskCompletionSource,imageString,$async_e,$asyncBody=Bridge.fn.bind(this,function(){try{for(;;){$step=System.Array.min([0,1,2,3,4],$step);switch($step){case 0:if(this.X=dynamic.x,this.Y=dynamic.y,this.Width=dynamic.width,this.Height=dynamic.height,imageString=dynamic.image,imageString.charCodeAt(0)===35){$step=1;continue}else{$step=2;continue}case 1:this.Image=imageString;$step=4;continue;case 2:$task1=JoelFive.App.LoadImage(imageString);$step=3;$task1.continueWith($asyncBody);return;case 3:$taskResult1=$task1.getAwaitedResult();this.Image=$taskResult1;$step=4;continue;case 4:$tcs.setResult(null);return;default:$tcs.setResult(null);return}}}catch($async_e1){$async_e=System.Exception.create($async_e1);$tcs.setException($async_e)}},arguments);return $asyncBody(),$tcs.task}}});Bridge.define("JoelFive.Game",{inherits:[JoelFive.GameObject],statics:{methods:{Create:function(dynamic){var $step=0,$task1,$taskResult1,$tcs=new System.Threading.Tasks.TaskCompletionSource,children,game,$t,$t1,$t2,item,$async_e,$asyncBody=Bridge.fn.bind(this,function(){try{for(;;){$step=System.Array.min([0,1,2,3,4],$step);switch($step){case 0:game=($t=new JoelFive.Game,$t.Children=children=new(System.Collections.Generic.List$1(JoelFive.GameObject)),$t.Interval=dynamic.interval,$t.DrawInterval=dynamic.drawInterval,$t.Canvas=($t1=document.createElement("canvas"),$t1.width=dynamic.width,$t1.height=dynamic.height,$t1),$t.Down=new(System.Collections.Generic.HashSet$1(System.Int32).ctor),$t);$t2=Bridge.getEnumerator(Bridge.cast(dynamic.children,System.Array.type(System.Object)));$step=1;continue;case 1:if($t2.moveNext()){item=$t2.Current;$step=2;continue}$step=4;continue;case 2:$task1=JoelFive.GameObject.Create(item);$step=3;$task1.continueWith($asyncBody);return;case 3:$taskResult1=$task1.getAwaitedResult();children.add($taskResult1);$step=1;continue;case 4:$tcs.setResult(game);return;default:$tcs.setResult(null);return}}}catch($async_e1){$async_e=System.Exception.create($async_e1);$tcs.setException($async_e)}},arguments);return $asyncBody(),$tcs.task}}},fields:{Children:null,Interval:0,DrawInterval:0,Canvas:null,Down:null},methods:{Start:function(){document.body.onkeyup=Bridge.fn.bind(this,$asm.$.JoelFive.Game.f1);document.body.onkeydown=Bridge.fn.bind(this,$asm.$.JoelFive.Game.f2);Bridge.global.setInterval(Bridge.fn.cacheBind(this,this.Update),this.Interval);Bridge.global.setInterval(Bridge.fn.cacheBind(this,this.Draw),this.DrawInterval)},Draw:function(){var $t,context=this.Canvas.getContext("2d"),child,drawObject;context.clearRect(0,0,this.Canvas.width,this.Canvas.height);$t=Bridge.getEnumerator(this.Children);try{while($t.moveNext())child=$t.Current,Bridge.is(child,JoelFive.DrawnGameObject)&&(drawObject=child,Bridge.is(drawObject.Image,System.String)?(context.fillStyle=drawObject.Image,context.fillRect(drawObject.X,drawObject.Y,drawObject.Width,drawObject.Height)):context.drawImage(drawObject.Image,drawObject.X,drawObject.Y))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$dispose()}},Update:function(){var $t,child;$t=Bridge.getEnumerator(this.Children);try{while($t.moveNext())child=$t.Current,Bridge.is(child,JoelFive.RealGameObject)&&child.Update(this)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$dispose()}}}});Bridge.ns("JoelFive.Game",$asm.$);Bridge.apply($asm.$.JoelFive.Game,{f1:function(e){this.Down.remove(e.keyCode)},f2:function(e){this.Down.add(e.keyCode)}});Bridge.define("JoelFive.RealGameObject",{inherits:[JoelFive.DrawnGameObject],fields:{Gravity:0,onSolid:!1},methods:{Parse:function(dynamic){var $step=0,$task1,$tcs=new System.Threading.Tasks.TaskCompletionSource,$async_e,$asyncBody=Bridge.fn.bind(this,function(){try{for(;;){$step=System.Array.min([0,1],$step);switch($step){case 0:this.Gravity=dynamic.gravity;$task1=JoelFive.DrawnGameObject.prototype.Parse.call(this,dynamic);$step=1;$task1.continueWith($asyncBody);return;case 1:$task1.getAwaitedResult();$tcs.setResult(null);return;default:$tcs.setResult(null);return}}}catch($async_e1){$async_e=System.Exception.create($async_e1);$tcs.setException($async_e)}},arguments);return $asyncBody(),$tcs.task},TryMove$1:function($in,NotMovingIn,MovingIn,NotMovingInLength,MovingInLength,Velocity,GetMovingIn){var $t,$t1,$t2,intersects=new(System.Collections.Generic.List$1(JoelFive.RealGameObject)),child,realGameObject,rect,doesIntersect,movingInLength,min;$t=Bridge.getEnumerator($in.Children);try{while($t.moveNext())if(child=$t.Current,Bridge.is(child,JoelFive.RealGameObject)){if(realGameObject=child,rect=($t1=new JoelFive.Rectangle,$t1.X=NotMovingIn,$t1.Width=NotMovingInLength,$t1.Y=MovingIn.v+MovingInLength,$t1.Height=Velocity,$t1),GetMovingIn(rect.$clone())===rect.X){var newX=rect.Y,newY=rect.X,newWidth=rect.Height,newHeight=rect.Width;rect=($t2=new JoelFive.Rectangle,$t2.X=newX,$t2.Y=newY,$t2.Width=newWidth,$t2.Height=newHeight,$t2)}doesIntersect=rect.Intersects(realGameObject.Position.$clone());doesIntersect&&intersects.add(realGameObject)}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$dispose()}if(intersects.Count===0)MovingIn.v+=Velocity;else return movingInLength=MovingInLength,min=System.Linq.Enumerable.from(intersects).min(function(v){return GetMovingIn(v.Position.$clone())-movingInLength}),MovingIn.v=min,!1;return!0},TryMove:function($in,velocity){var $t,$t1,canMove;return velocity.X!==0&&velocity.Y!==0?(canMove=!0,canMove=this.TryMove($in,($t=new JoelFive.Vector2,$t.X=velocity.X,$t))?canMove:!1,this.TryMove($in,($t1=new JoelFive.Vector2,$t1.Y=velocity.Y,$t1))?canMove:!1):velocity.X!==0?this.TryMove$1($in,this.Position.Y,Bridge.ref(this.Position,"X"),this.Position.Height,this.Position.Width,velocity.X,$asm.$.JoelFive.RealGameObject.f1):velocity.Y!==0?this.TryMove$1($in,this.Position.X,Bridge.ref(this.Position,"Y"),this.Position.Width,this.Position.Height,velocity.Y,$asm.$.JoelFive.RealGameObject.f2):!0},Update:function($in){var $t;this.onSolid=!this.TryMove($in,($t=new JoelFive.Vector2,$t.Y=this.Gravity,$t))}}});Bridge.ns("JoelFive.RealGameObject",$asm.$);Bridge.apply($asm.$.JoelFive.RealGameObject,{f1:function(v){return v.X},f2:function(v){return v.Y}});Bridge.define("JoelFive.Character",{inherits:[JoelFive.RealGameObject],fields:{movements:null},methods:{Update:function($in){var $t,$t1;if(JoelFive.RealGameObject.prototype.Update.call(this,$in),this.onSolid){$t=Bridge.getEnumerator(this.movements);try{while($t.moveNext())if($t1=function(){var movement=$t.Current;if(System.Linq.Enumerable.from(movement.Keys).all(function(key){return $in.Down.contains(key)}))return this.TryMove($in,movement.Velocity.$clone()),{jump:2}}.call(this)||{},$t1.jump==2)break}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$dispose()}}},Parse:function(dynamic){var $step=0,$task1,$tcs=new System.Threading.Tasks.TaskCompletionSource,$t,movementDynamic,movement,$t1,$t2,$async_e,$asyncBody=Bridge.fn.bind(this,function(){try{for(;;){$step=System.Array.min([0,1],$step);switch($step){case 0:this.movements=new(System.Collections.Generic.List$1(JoelFive.Movement));$t=Bridge.getEnumerator(dynamic.movements);try{while($t.moveNext())movementDynamic=$t.Current,movement=($t1=new JoelFive.Movement,$t1.Velocity=($t2=new JoelFive.Vector2,$t2.X=movementDynamic.x,$t2.Y=movementDynamic.y,$t2),$t1.Keys=System.Linq.Enumerable.from(Bridge.cast(movementDynamic.keys,System.Array.type(System.Int32))).toList(System.Int32),$t1),this.movements.add(movement)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$dispose()}$task1=JoelFive.RealGameObject.prototype.Parse.call(this,dynamic);$step=1;$task1.continueWith($asyncBody);return;case 1:$task1.getAwaitedResult();$tcs.setResult(null);return;default:$tcs.setResult(null);return}}}catch($async_e1){$async_e=System.Exception.create($async_e1);$tcs.setException($async_e)}},arguments);return $asyncBody(),$tcs.task}}})});